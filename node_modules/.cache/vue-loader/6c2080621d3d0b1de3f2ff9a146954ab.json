{"remainingRequest":"/Users/ilyatish/Projects/maxi-booking-test/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/ilyatish/Projects/maxi-booking-test/src/App.vue?vue&type=style&index=0&lang=stylus&","dependencies":[{"path":"/Users/ilyatish/Projects/maxi-booking-test/src/App.vue","mtime":1602699675556},{"path":"/Users/ilyatish/Projects/maxi-booking-test/node_modules/css-loader/dist/cjs.js","mtime":1594124138887},{"path":"/Users/ilyatish/Projects/maxi-booking-test/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1602678030223},{"path":"/Users/ilyatish/Projects/maxi-booking-test/node_modules/postcss-loader/src/index.js","mtime":1581966832902},{"path":"/Users/ilyatish/Projects/maxi-booking-test/node_modules/stylus-loader/index.js","mtime":1594123755981},{"path":"/Users/ilyatish/Projects/maxi-booking-test/node_modules/cache-loader/dist/cjs.js","mtime":1581966828116},{"path":"/Users/ilyatish/Projects/maxi-booking-test/node_modules/vue-loader/lib/index.js","mtime":1602678030223}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKI2FwcAogIGZvbnQtZmFtaWx5OiBBdmVuaXIsIEhlbHZldGljYSwgQXJpYWwsIHNhbnMtc2VyaWYKICAtd2Via2l0LWZvbnQtc21vb3RoaW5nOiBhbnRpYWxpYXNlZAogIC1tb3otb3N4LWZvbnQtc21vb3RoaW5nOiBncmF5c2NhbGUKICB0ZXh0LWFsaWduOiBjZW50ZXIKICBjb2xvcjogIzJjM2U1MAogIG1hcmdpbi10b3A6IDYwcHgKCi5ib3gKICBtYXJnaW46IDQwcHggMAogIGJhY2tncm91bmQgI0VFRUVFRQo="},{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8EA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"App.vue","sourceRoot":"src","sourcesContent":["<template lang='pug'>\n  #app\n    .box.box-1 \n      .xml-box(v-if='valutesData') {{ valutesData.EUR_xml.Name[0] }}\n</template>\n\n<script>\nconst axios       = require('axios'),\n      parseString = require('xml2js').parseString;\n\nconst getSource = (arr, index, arrToPush, context) => {\n  axios\n    .get(arr[index])\n    .then(res => {\n      if (res.headers['content-type'] === 'text/xml') {\n        parseString(res.data, (err, result) => {\n          if (result.ValCurs.Valute[11]) {\n            context.$set(context.valutesData, 'EUR_xml', result.ValCurs.Valute[11])\n          }\n          arrToPush.push(result)\n        })\n      } else {\n        arrToPush.push(res.data)\n      }\n    }).catch(error => {\n      if (index < arr.length - 1) {\n        return getSource(arr, index + 1, arrToPush, context);\n      }\n      throw error;\n    })\n}\n\nexport default {\n  name: 'App',\n  data () {\n    return {\n      valutesData: {\n        EUR_xml: {\n          Name: ['']\n        }\n      },\n      sourcesData: [],\n      sources: [\n        'https://www.cbr-xml-daily.ru/daily_utf8.xml',\n        'https://www.cbr-xml-daily.ru/daily_json.js'\n      ]\n    }\n  },\n  mounted: function() {\n    const self = this;\n    getSource(self.sources, 0, self.sourcesData, self)\n  }\n}\n\n\n\n    // axios.all(\n    //   self.sources.map(source => {\n    //     axios\n    //       .get(source)\n    //       .then(res => {\n    //         if (res.headers['content-type'] === 'text/xml') {\n    //           parseString(res.data, (err, result) => {\n    //             console.log(result)\n    //             self.sourcesData.push(result)\n    //           })\n    //         } else {\n    //           console.log(res.data)\n    //           self.sourcesData.push(res.data)\n    //         }\n\n    //         console.log(this.sourcesData)\n    //       })\n    //   })\n    // )\n</script>\n\n<style lang='stylus'>\n#app\n  font-family: Avenir, Helvetica, Arial, sans-serif\n  -webkit-font-smoothing: antialiased\n  -moz-osx-font-smoothing: grayscale\n  text-align: center\n  color: #2c3e50\n  margin-top: 60px\n\n.box\n  margin: 40px 0\n  background #EEEEEE\n</style>\n"]}]}